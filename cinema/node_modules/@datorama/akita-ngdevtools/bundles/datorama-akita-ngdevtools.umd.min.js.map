{"version":3,"sources":["ng://@datorama/akita-ngdevtools/lib/ng-devtools.module.ts"],"names":["DEVTOOLS_OPTIONS","InjectionToken","AkitaDevtools","ngZone","options","this","akitaDevtools","NgZone","Inject","args","Injectable","providedIn","d","init","AkitaNgDevtools","forRoot","ngModule","providers","provide","useValue","APP_INITIALIZER","useFactory","deps","multi","NgModule"],"mappings":"mYAGaA,EAAmB,IAAIC,EAAAA,eAAgC,gCAMlE,SAAAC,EAAoBC,EAAkDC,GAAlDC,KAAAF,OAAAA,EAAkDE,KAAAD,QAAAA,EACpEE,EAAAA,cAAcD,KAAKF,OAAQE,KAAKD,yDADNG,EAAAA,uCAASC,EAAAA,OAAMC,KAAA,CAACT,oKAJ7CU,EAAAA,WAAUD,KAAA,CAAC,CACVE,WAAY,oDAN2CJ,EAAAA,uCASlBC,EAAAA,OAAMC,KAAA,CAACT,sBAM9BY,cAEAC,EAAKP,GACnB,OAAOM,mBAGT,SAAAE,KAmBA,OAjBgBA,EAAAC,QAAd,SAAsBX,GACpB,MAAO,CACLY,SAAUF,EACVG,UAAW,CACT,CACEC,QAASlB,EACTmB,SAAUf,GAEZ,CACEc,QAASE,EAAAA,gBACTC,WAAYR,EACZS,KAAM,CAACpB,GACPqB,OAAO,0BAdhBC,EAAAA,SAAQf,KAAA,CAAC,MAmBVK","sourcesContent":["import { APP_INITIALIZER, ModuleWithProviders, NgModule, NgZone, InjectionToken, Inject, Injectable } from '@angular/core';\nimport { akitaDevtools, DevtoolsOptions } from '@datorama/akita';\n\nexport const DEVTOOLS_OPTIONS = new InjectionToken<DevtoolsOptions>('DevtoolsOptions');\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AkitaDevtools {\n  constructor(private ngZone: NgZone, @Inject(DEVTOOLS_OPTIONS) private options: DevtoolsOptions) {\n    akitaDevtools(this.ngZone, this.options);\n  }\n}\n\n// auto initialize the devtools\nexport function d() {}\n\nexport function init(akitaDevtools: AkitaDevtools) {\n  return d;\n}\n\n@NgModule({})\nexport class AkitaNgDevtools {\n  public static forRoot(options?: Partial<DevtoolsOptions>): ModuleWithProviders<AkitaNgDevtools> {\n    return {\n      ngModule: AkitaNgDevtools,\n      providers: [\n        {\n          provide: DEVTOOLS_OPTIONS,\n          useValue: options\n        },\n        {\n          provide: APP_INITIALIZER,\n          useFactory: init,\n          deps: [AkitaDevtools],\n          multi: true\n        }\n      ]\n    };\n  }\n}\n"]}