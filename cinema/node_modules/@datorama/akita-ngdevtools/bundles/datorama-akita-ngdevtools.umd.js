(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@datorama/akita')) :
    typeof define === 'function' && define.amd ? define('@datorama/akita-ngdevtools', ['exports', '@angular/core', '@datorama/akita'], factory) :
    (global = global || self, factory((global.datorama = global.datorama || {}, global.datorama['akita-ngdevtools'] = {}), global.ng.core, global.akita));
}(this, (function (exports, core, akita) { 'use strict';

    var DEVTOOLS_OPTIONS = new core.InjectionToken('DevtoolsOptions');
    var AkitaDevtools = /** @class */ (function () {
        function AkitaDevtools(ngZone, options) {
            this.ngZone = ngZone;
            this.options = options;
            akita.akitaDevtools(this.ngZone, this.options);
        }
        AkitaDevtools.ctorParameters = function () { return [
            { type: core.NgZone },
            { type: undefined, decorators: [{ type: core.Inject, args: [DEVTOOLS_OPTIONS,] }] }
        ]; };
        AkitaDevtools.ɵprov = core["ɵɵdefineInjectable"]({ factory: function AkitaDevtools_Factory() { return new AkitaDevtools(core["ɵɵinject"](core.NgZone), core["ɵɵinject"](DEVTOOLS_OPTIONS)); }, token: AkitaDevtools, providedIn: "root" });
        AkitaDevtools.decorators = [
            { type: core.Injectable, args: [{
                        providedIn: 'root'
                    },] }
        ];
        AkitaDevtools.ctorParameters = function () { return [
            { type: core.NgZone },
            { type: undefined, decorators: [{ type: core.Inject, args: [DEVTOOLS_OPTIONS,] }] }
        ]; };
        return AkitaDevtools;
    }());
    // auto initialize the devtools
    function d() { }
    function init(akitaDevtools) {
        return d;
    }
    var AkitaNgDevtools = /** @class */ (function () {
        function AkitaNgDevtools() {
        }
        AkitaNgDevtools.forRoot = function (options) {
            return {
                ngModule: AkitaNgDevtools,
                providers: [
                    {
                        provide: DEVTOOLS_OPTIONS,
                        useValue: options
                    },
                    {
                        provide: core.APP_INITIALIZER,
                        useFactory: init,
                        deps: [AkitaDevtools],
                        multi: true
                    }
                ]
            };
        };
        AkitaNgDevtools.decorators = [
            { type: core.NgModule, args: [{},] }
        ];
        return AkitaNgDevtools;
    }());

    exports.AkitaDevtools = AkitaDevtools;
    exports.AkitaNgDevtools = AkitaNgDevtools;
    exports.DEVTOOLS_OPTIONS = DEVTOOLS_OPTIONS;
    exports.d = d;
    exports.init = init;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=datorama-akita-ngdevtools.umd.js.map
