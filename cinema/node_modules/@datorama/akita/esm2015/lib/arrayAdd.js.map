{"version":3,"file":"arrayAdd.js","sourceRoot":"ng://@datorama/akita/","sources":["lib/arrayAdd.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,WAAW,EAAE,MAAM,eAAe,CAAC;AAG5C;;;;;;;;;;GAUG;AAEH,MAAM,UAAU,QAAQ,CAAgC,GAAM,EAAE,SAA0B,EAAE,UAA8B,EAAE;IAC1H,MAAM,WAAW,GAAG,WAAW,CAAC,SAAS,CAAC,CAAC;IAC3C,MAAM,KAAK,GAAG,GAAG,IAAI,EAAE,CAAC;IAExB,OAAO,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,WAAW,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,CAAE,CAAC,GAAG,KAAK,EAAE,GAAG,WAAW,CAAS,CAAC;AAC5F,CAAC","sourcesContent":["import { OrArray } from './types';\nimport { coerceArray } from './coerceArray';\nimport { AddEntitiesOptions } from './addEntities';\n\n/**\n * Add item to a collection\n *\n * @example\n *\n *\n * store.update(state => ({\n *   comments: arrayAdd(state.comments, { id: 2 })\n * }))\n *\n */\n\nexport function arrayAdd<T extends any[], Entity = any>(arr: T, newEntity: OrArray<Entity>, options: AddEntitiesOptions = {}): T {\n  const newEntities = coerceArray(newEntity);\n  const toArr = arr || [];\n\n  return options.prepend ? [...newEntities, ...toArr] : ([...toArr, ...newEntities] as any);\n}\n"]}