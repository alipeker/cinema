{"version":3,"file":"arrayUpdate.js","sourceRoot":"ng://@datorama/akita/","sources":["lib/arrayUpdate.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,eAAe,CAAC;AAC5C,OAAO,EAAE,cAAc,EAAE,MAAM,gBAAgB,CAAC;AAChD,OAAO,EAAE,UAAU,EAAE,MAAM,cAAc,CAAC;AAC1C,OAAO,EAAE,QAAQ,EAAE,MAAM,YAAY,CAAC;AAGtC;;;;;;;;;GASG;AACH,MAAM,UAAU,WAAW,CAAgC,GAAM,EAAE,cAA2C,EAAE,GAAoB,EAAE,KAAsB;IAAtB,sBAAA,EAAA,sBAAsB;IAC1J,IAAI,SAAgC,CAAC;IAErC,IAAI,UAAU,CAAC,cAAc,CAAC,EAAE;QAC9B,SAAS,GAAG,cAAc,CAAC;KAC5B;SAAM;QACL,IAAM,KAAG,GAAG,WAAW,CAAC,cAAc,CAAC,CAAC;QACxC,SAAS,GAAG,UAAC,IAAI,IAAK,OAAA,KAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,EAA1D,CAA0D,CAAC;KAClF;IAED,IAAM,QAAQ,GAAG,UAAC,KAAK;QACrB,OAAA,KAAK,CAAC,GAAG,CAAC,UAAC,MAAM,EAAE,KAAK;YACtB,IAAI,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,KAAK,IAAI,EAAE;gBACrC,OAAO,QAAQ,CAAC,MAAM,CAAC;oBACrB,CAAC,uBACM,MAAM,GACN,GAAG,EAEV,CAAC,CAAC,GAAG,CAAC;aACT;YAED,OAAO,MAAM,CAAC;QAChB,CAAC,CAAC;IAXF,CAWE,CAAC;IAEL,OAAO,QAAQ,CAAC,GAAG,CAAC,CAAC;AACvB,CAAC","sourcesContent":["import { coerceArray } from './coerceArray';\nimport { DEFAULT_ID_KEY } from './defaultIDKey';\nimport { isFunction } from './isFunction';\nimport { isObject } from './isObject';\nimport { IDS, ItemPredicate } from './types';\n\n/**\n * Update item in a collection\n *\n * @example\n *\n *\n * store.update(1, entity => ({\n *   comments: arrayUpdate(entity.comments, 1, { name: 'newComment' })\n * }))\n */\nexport function arrayUpdate<T extends any[], Entity = any>(arr: T, predicateOrIds: IDS | ItemPredicate<Entity>, obj: Partial<Entity>, idKey = DEFAULT_ID_KEY): T {\n  let condition: ItemPredicate<Entity>;\n\n  if (isFunction(predicateOrIds)) {\n    condition = predicateOrIds;\n  } else {\n    const ids = coerceArray(predicateOrIds);\n    condition = (item) => ids.includes(isObject(item) ? item[idKey] : item) === true;\n  }\n\n  const updateFn = (state) =>\n    state.map((entity, index) => {\n      if (condition(entity, index) === true) {\n        return isObject(entity)\n          ? {\n              ...entity,\n              ...obj,\n            }\n          : obj;\n      }\n\n      return entity;\n    });\n\n  return updateFn(arr);\n}\n"]}