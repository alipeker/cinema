{"version":3,"file":"arrayRemove.js","sourceRoot":"ng://@datorama/akita/","sources":["lib/arrayRemove.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,cAAc,EAAE,MAAM,gBAAgB,CAAC;AAChD,OAAO,EAAE,WAAW,EAAE,MAAM,eAAe,CAAC;AAC5C,OAAO,EAAE,QAAQ,EAAE,MAAM,YAAY,CAAC;AACtC,OAAO,EAAE,UAAU,EAAE,MAAM,cAAc,CAAC;AAC1C,OAAO,EAAE,GAAG,EAAE,MAAM,OAAO,CAAC;AAE5B;;;;;;;;;GASG;AACH,MAAM,UAAU,WAAW,CAAgC,GAAM,EAAE,UAAuC,EAAE,KAAsB;IAAtB,sBAAA,EAAA,sBAAsB;IAChI,IAAI,WAAW,CAAC;IAChB,IAAI,QAAQ,CAAC;IAEb,IAAI,UAAU,CAAC,UAAU,CAAC,EAAE;QAC1B,QAAQ,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC;KAC5B;SAAM;QACL,WAAW,GAAG,WAAW,CAAC,UAAiB,CAAC,CAAC;QAC7C,QAAQ,GAAG,UAAC,OAAO;YACjB,OAAO,WAAW,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,KAAK,CAAC;QACtF,CAAC,CAAC;KACH;IAED,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;QACtB,OAAO,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAQ,CAAC;KACpC;AACH,CAAC","sourcesContent":["import { IDS, ItemPredicate } from './types';\nimport { DEFAULT_ID_KEY } from './defaultIDKey';\nimport { coerceArray } from './coerceArray';\nimport { isObject } from './isObject';\nimport { isFunction } from './isFunction';\nimport { not } from './not';\n\n/**\n * Remove item from collection\n *\n * @example\n *\n *\n * store.update(state => ({\n *   names: arrayRemove(state.names, ['one', 'second'])\n * }))\n */\nexport function arrayRemove<T extends any[], Entity = any>(arr: T, identifier: IDS | ItemPredicate<Entity>, idKey = DEFAULT_ID_KEY): T {\n  let identifiers;\n  let filterFn;\n\n  if (isFunction(identifier)) {\n    filterFn = not(identifier);\n  } else {\n    identifiers = coerceArray(identifier as IDS);\n    filterFn = (current) => {\n      return identifiers.includes(isObject(current) ? current[idKey] : current) === false;\n    };\n  }\n\n  if (Array.isArray(arr)) {\n    return arr.filter(filterFn) as any;\n  }\n}\n"]}