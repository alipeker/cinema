{"version":3,"file":"snapshotManager.js","sourceRoot":"ng://@datorama/akita/","sources":["lib/snapshotManager.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,UAAU,CAAC;AACtC,OAAO,EAAE,QAAQ,EAAE,MAAM,YAAY,CAAC;AACtC,OAAO,EAAE,oBAAoB,EAAE,MAAM,gBAAgB,CAAC;AACtD,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,gBAAgB,CAAC;AAE9C;IAAA;IAiDA,CAAC;IAhDC;;;OAGG;IACH,2CAAiB,GAAjB,UAAkB,MAAqB;QAArB,uBAAA,EAAA,WAAqB;QACrC,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,IAAM,UAAU,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;QACrC,IAAM,IAAI,GAAG,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC3D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACpC,IAAI,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACxB,IAAI,SAAS,KAAK,QAAQ,EAAE;gBAC1B,GAAG,CAAC,SAAS,CAAC,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,CAAC;aACjD;SACF;QAED,OAAO,GAAG,CAAC;IACb,CAAC;IAED,2CAAiB,GAAjB,UAAkB,MAA6C,EAAE,OAAyD;QACxH,IAAM,aAAa,YAAQ,EAAE,iBAAiB,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,EAAK,OAAO,CAAE,CAAC;QACnF,aAAa,CAAC,iBAAiB,IAAI,oBAAoB,CAAC,IAAI,CAAC,CAAC;QAE9D,IAAI,gBAAgB,GAAG,MAAM,CAAC;QAE9B,IAAI,QAAQ,CAAC,MAAM,CAAC,EAAE;YACpB,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,gBAA0B,CAAC,CAAC;SAC3D;QAED,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,MAAM,CAAC;QAElD,IAAI,aAAa,CAAC,IAAI,EAAE;YACtB,UAAU;iBACP,IAAI,CACH,MAAM,CAAC,UAAA,IAAI,IAAI,OAAA,gBAAgB,CAAC,cAAc,CAAC,IAAI,CAAC,EAArC,CAAqC,CAAC,EACrD,IAAI,CAAC,IAAI,CAAC,CACX;iBACA,SAAS,CAAC,UAAA,IAAI,IAAI,OAAA,UAAU,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,cAAM,OAAA,gBAAgB,CAAC,IAAI,CAAC,EAAtB,CAAsB,CAAC,EAAxD,CAAwD,CAAC,CAAC;SAChF;aAAM;oCACI,CAAC,EAAM,IAAI;gBAClB,IAAM,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;gBAC1B,IAAI,UAAU,CAAC,SAAS,CAAC,EAAE;oBACzB,UAAU,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,cAAM,OAAA,gBAAgB,CAAC,SAAS,CAAC,EAA3B,CAA2B,CAAC,CAAC;iBACpE;;YAJH,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE;wBAAjE,CAAC,EAAM,IAAI;aAKnB;SACF;QAED,aAAa,CAAC,iBAAiB,IAAI,oBAAoB,CAAC,KAAK,CAAC,CAAC;IACjE,CAAC;IACH,sBAAC;AAAD,CAAC,AAjDD,IAiDC;;AAED,MAAM,CAAC,IAAM,eAAe,GAAG,IAAI,eAAe,EAAE,CAAC","sourcesContent":["import { __stores__ } from './stores';\nimport { isString } from './isString';\nimport { setSkipStorageUpdate } from './persistState';\nimport { $$addStore } from './dispatchers';\nimport { filter, take } from 'rxjs/operators';\n\nexport class SnapshotManager {\n  /**\n   * Get a snapshot of the whole state or a specific stores\n   * Use it ONLY for things such as saving the state in the server\n   */\n  getStoresSnapshot(stores: string[] = []) {\n    let acc = {};\n    const hasInclude = stores.length > 0;\n    const keys = hasInclude ? stores : Object.keys(__stores__);\n    for (let i = 0; i < keys.length; i++) {\n      let storeName = keys[i];\n      if (storeName !== 'router') {\n        acc[storeName] = __stores__[storeName]._value();\n      }\n    }\n\n    return acc;\n  }\n\n  setStoresSnapshot(stores: { [storeName: string]: any } | string, options?: { skipStorageUpdate?: boolean; lazy?: boolean }) {\n    const mergedOptions = { ...{ skipStorageUpdate: false, lazy: false }, ...options };\n    mergedOptions.skipStorageUpdate && setSkipStorageUpdate(true);\n\n    let normalizedStores = stores;\n\n    if (isString(stores)) {\n      normalizedStores = JSON.parse(normalizedStores as string);\n    }\n\n    const size = Object.keys(normalizedStores).length;\n\n    if (mergedOptions.lazy) {\n      $$addStore\n        .pipe(\n          filter(name => normalizedStores.hasOwnProperty(name)),\n          take(size)\n        )\n        .subscribe(name => __stores__[name]._setState(() => normalizedStores[name]));\n    } else {\n      for (let i = 0, keys = Object.keys(normalizedStores); i < keys.length; i++) {\n        const storeName = keys[i];\n        if (__stores__[storeName]) {\n          __stores__[storeName]._setState(() => normalizedStores[storeName]);\n        }\n      }\n    }\n\n    mergedOptions.skipStorageUpdate && setSkipStorageUpdate(false);\n  }\n}\n\nexport const snapshotManager = new SnapshotManager();\n"]}